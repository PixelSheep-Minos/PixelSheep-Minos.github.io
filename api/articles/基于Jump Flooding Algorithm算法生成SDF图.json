{"title":"基于Jump Flooding Algorithm算法生成SDF图","uid":"ac85b707dfa813d55cb97bb16b8c4bb7","slug":"基于Jump Flooding Algorithm算法生成SDF图","date":"2021-06-24T16:00:00.000Z","updated":"2023-03-12T01:08:47.411Z","comments":true,"path":"api/articles/基于Jump Flooding Algorithm算法生成SDF图.json","keywords":null,"cover":"images/xiong.jpg","content":"<h2 id=\"一、引言\"><a href=\"#一、引言\" class=\"headerlink\" title=\"一、引言\"></a>一、引言</h2><p>  之前项目需要写一个带浮沫效果的卡通水面的shader。对于foam通常的做法，也是网上烂大街的做法，即是通过采样深度图，与当前fragment的深度值的差值求出水面与物体边缘。但这样的效果其实并不好，因为当物体表面越垂直于水面时（比如一个立方体浮在水面上），由于深度差变化很快，采样的范围很小，做出来的foam效果不太好看。后来我改用SDF图的方法来生成foam区域，效果理想很多。本文介绍了SDF及用到的算法<code>Jump Flooding Algorithm</code>。</p>\n<h2 id=\"二、SDF\"><a href=\"#二、SDF\" class=\"headerlink\" title=\"二、SDF\"></a>二、SDF</h2><p>  有向距离场（SDF, Signed Distance Fields），记录的是空间中某一点与某个集合边界的距离值，其正负值则对应该点在集合外部或内部。SDF在计算机图形学和相关领域中的用处非常广泛，它常用布料动画中的碰撞检测、多体动力学、网格生成、运动规划和雕刻等。</p>\n<p>一张2D SDF图则定义为：<br>  <code>一张标注了每个像素与最近几何体边界的距离的位图</code></p>\n<ul>\n<li>如果像素在几何体内，值为负，距离越大则值越小</li>\n<li>如果像素在几何体边界，则值为0</li>\n<li>如果像素在几何体外，值为正，距离越大则值越大</li>\n</ul>\n","feature":false,"text":"一、引言 之前项目需要写一个带浮沫效果的卡通水面的shader。对于foam通常的做法，也是网上烂大街的做法，即是通过采样深度图，与当前fragment的深度值的差值求出水面与物体边缘。但这样的效果其实并不好，因为当物体表面越垂直于水面时（比如一个立方体浮在水面上），由于深度差变...","link":"","photos":[],"count_time":{"symbolsCount":481,"symbolsTime":"1 mins."},"categories":[{"name":"TechArt","slug":"TechArt","count":1,"path":"api/categories/TechArt.json"}],"tags":[{"name":"TechArt","slug":"TechArt","count":1,"path":"api/tags/TechArt.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E5%BC%95%E8%A8%80\"><span class=\"toc-text\">一、引言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81SDF\"><span class=\"toc-text\">二、SDF</span></a></li></ol>","author":{"name":"PixelSheep","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Let's get out of the way with some boring knowledge~","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Hello World","uid":"b9663f58f18133b35bfe243f3e916a80","slug":"hello-world","date":"2023-03-10T06:55:28.092Z","updated":"2023-03-10T12:42:18.896Z","comments":true,"path":"api/articles/hello-world.json","keywords":null,"cover":null,"text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the ...","link":"","photos":[],"count_time":{"symbolsCount":440,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"PixelSheep","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Let's get out of the way with some boring knowledge~","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}